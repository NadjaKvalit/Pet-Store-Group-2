{
	"info": {
		"_postman_id": "ed2f77fe-6ee7-4bdb-ba06-63c65b443eb8",
		"name": "Swagger Pet Store API Testing",
		"description": "API that allows you to manage a pet store's inventory and ordersEndFragment.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25198804",
		"_collection_link": "https://red-sunset-559740.postman.co/workspace/Group-2~526c93cc-56bb-41fd-b23e-8e41fd542ba8/collection/29559368-ed2f77fe-6ee7-4bdb-ba06-63c65b443eb8?action=share&source=collection_link&creator=25198804"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test status codes to ensure correct responses.",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"New user creation completed successfully\");",
									"});",
									"",
									"// Validate response headers.",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"// Validate the JSON structure of the response.",
									"/* response has this structure:",
									"{",
									"    \"code\": 200,",
									"    \"type\": \"unknown\",",
									"    \"message\": \"8\"",
									"}",
									"*/",
									"pm.test(\"Validate JSON structure of the response\", () => {",
									"  var responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.have.property(\"code\");",
									"  pm.expect(responseJson).to.have.property(\"type\");",
									"  pm.expect(responseJson).to.have.property(\"message\");",
									"});",
									"",
									"// Check response time",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 8,\r\n  \"username\": \"VikaR\",\r\n  \"firstName\": \"{{user_firstName}}\",\r\n  \"lastName\": \"{{user_lastName}}\",\r\n  \"email\": \"VikaR@gmail.com\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"0728461135\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}user",
							"host": [
								"{{url}}user"
							]
						},
						"description": "Create a new user"
					},
					"response": [
						{
							"name": "Create User positive",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 8,\r\n  \"username\": \"VikaR\",\r\n  \"firstName\": \"{{user_firstName}}\",\r\n  \"lastName\": \"{{user_lastName}}\",\r\n  \"email\": \"VikaR@gmail.com\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"0728461135\",\r\n  \"userStatus\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user",
									"host": [
										"{{url}}user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 10 Sep 2023 19:09:27 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"8\"\n}"
						}
					]
				},
				{
					"name": "Info about user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test status codes to ensure correct responses.",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"User is found successfully\");",
									"});",
									"",
									"// Validate response headers.",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"// Validate the JSON structure of the response.",
									"/* response has this structure:",
									"{",
									"    \"id\": 8,",
									"    \"username\": \"VikaR\",",
									"    \"firstName\": \"Vika\",",
									"    \"lastName\": \"R\",",
									"    \"email\": \"VikaR@gmail.com\",",
									"    \"password\": \"string\",",
									"    \"phone\": \"0728461135\",",
									"    \"userStatus\": 0",
									"}",
									"*/",
									"pm.test(\"Validate JSON structure of the response\", () => {",
									"  var responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.have.property(\"id\");",
									"  pm.expect(responseJson).to.have.property(\"username\");",
									"  pm.expect(responseJson).to.have.property(\"firstName\");",
									"  pm.expect(responseJson).to.have.property(\"lastName\");",
									"  pm.expect(responseJson).to.have.property(\"email\");",
									"  pm.expect(responseJson).to.have.property(\"password\");",
									"  pm.expect(responseJson).to.have.property(\"phone\");",
									"  pm.expect(responseJson).to.have.property(\"userStatus\");",
									"});",
									"",
									"// Check response time",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Add some tests asserting value to environmental variable.",
									"pm.test(\"Validate UserName, FirstName, Lastname\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.be.an('object');",
									"    pm.expect(responseJson.username).to.eql(pm.environment.get(\"userName\"));",
									"    pm.expect(responseJson.firstName).to.eql(pm.environment.get(\"user_firstName\"));",
									"    pm.expect(responseJson.lastName).to.eql(pm.environment.get(\"user_lastName\"));",
									"console.log(\"UserName from response: \" + responseJson.username + \" = UserName from enviroment value: \" + pm.environment.get(\"userName\"));",
									"console.log(\"FirstName from response: \" + responseJson.firstName + \" = FirstName from enviroment value: \" + pm.environment.get(\"user_firstName\"));",
									"console.log(\"LastName from response: \" + responseJson.lastName + \" = LastName from enviroment value: \" + pm.environment.get(\"user_lastName\"));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}user/{{userName}}",
							"host": [
								"{{url}}user"
							],
							"path": [
								"{{userName}}"
							]
						},
						"description": "Get info about an user by the user's name"
					},
					"response": [
						{
							"name": "Info about user  positive",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}user/{{userName}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{userName}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 10 Sep 2023 19:10:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 8,\n    \"username\": \"VikaR\",\n    \"firstName\": \"Vika\",\n    \"lastName\": \"R\",\n    \"email\": \"VikaR@gmail.com\",\n    \"password\": \"string\",\n    \"phone\": \"0728461135\",\n    \"userStatus\": 0\n}"
						}
					]
				},
				{
					"name": "Update user's info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test status codes to ensure correct responses.",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"User information update was successful\");",
									"});",
									"",
									"// Validate response headers.",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"// Validate the JSON structure of the response.",
									"/* response has this structure:",
									"{",
									"    \"code\": 200,",
									"    \"type\": \"unknown\",",
									"    \"message\": \"8\"",
									"}",
									"*/",
									"pm.test(\"Validate JSON structure of the response\", () => {",
									"  var responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.have.property(\"code\");",
									"  pm.expect(responseJson).to.have.property(\"type\");",
									"  pm.expect(responseJson).to.have.property(\"message\");",
									"});",
									"",
									"// Check response time",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 8,\r\n  \"username\": \"{{userName}}\",\r\n  \"firstName\": \"{{user_firstName}}\",\r\n  \"lastName\": \"{{user_lastName}}\",\r\n  \"email\": \"VikaR@gmail.com\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"0728461136\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}user/{{userName}}",
							"host": [
								"{{url}}user"
							],
							"path": [
								"{{userName}}"
							]
						},
						"description": "Update user's info"
					},
					"response": [
						{
							"name": "Update user's info  positive",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 8,\r\n  \"username\": \"{{userName}}\",\r\n  \"firstName\": \"{{user_firstName}}\",\r\n  \"lastName\": \"{{user_lastName}}\",\r\n  \"email\": \"VikaR@gmail.com\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"0728461136\",\r\n  \"userStatus\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{userName}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{userName}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 10 Sep 2023 19:11:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"8\"\n}"
						}
					]
				},
				{
					"name": "Login a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test status codes to ensure correct responses.",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"Login was successful\");",
									"});",
									"",
									"// Validate response headers.",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"// Validate the JSON structure of the response.",
									"/* response has this structure:",
									"{",
									"    \"code\": 200,",
									"    \"type\": \"unknown\",",
									"    \"message\": \"logged in user session:1694355191149\"",
									"}",
									"*/",
									"pm.test(\"Validate JSON structure of the response\", () => {",
									"  var responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.have.property(\"code\");",
									"  pm.expect(responseJson).to.have.property(\"type\");",
									"  pm.expect(responseJson).to.have.property(\"message\");",
									"});",
									"",
									"// Check response time",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}user/login?username={{userName}}&password={{user_password}}",
							"host": [
								"{{url}}user"
							],
							"path": [
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{userName}}"
								},
								{
									"key": "password",
									"value": "{{user_password}}"
								}
							]
						},
						"description": "User logs into the system"
					},
					"response": [
						{
							"name": "Login a user  positive",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}user/login?username={{userName}}&password={{user_password}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "{{userName}}"
										},
										{
											"key": "password",
											"value": "{{user_password}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 10 Sep 2023 19:11:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "X-Expires-After",
									"value": "Sun Sep 10 20:11:07 UTC 2023"
								},
								{
									"key": "X-Rate-Limit",
									"value": "5000"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"logged in user session:1694373067510\"\n}"
						}
					]
				},
				{
					"name": "Logout a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test status codes to ensure correct responses.",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"Logout was successful\");",
									"});",
									"",
									"// Validate response headers.",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"// Validate the JSON structure of the response.",
									"/* response has this structure:",
									"{",
									"    \"code\": 200,",
									"    \"type\": \"unknown\",",
									"    \"message\": \"ok\"",
									"}",
									"*/",
									"pm.test(\"Validate JSON structure of the response\", () => {",
									"  var responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.have.property(\"code\");",
									"  pm.expect(responseJson).to.have.property(\"type\");",
									"  pm.expect(responseJson).to.have.property(\"message\");",
									"});",
									"",
									"// Check response time",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}user/logout",
							"host": [
								"{{url}}user"
							],
							"path": [
								"logout"
							]
						},
						"description": "Current logged in user logs out"
					},
					"response": [
						{
							"name": "Logout a user  positive",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}user/logout",
									"host": [
										"{{url}}user"
									],
									"path": [
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 10 Sep 2023 19:11:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"ok\"\n}"
						}
					]
				},
				{
					"name": "Remove a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test status codes to ensure correct responses.",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"Login was successful\");",
									"});",
									"",
									"// Validate response headers.",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"// Validate the JSON structure of the response.",
									"/* response has this structure:",
									"{",
									"    \"code\": 200,",
									"    \"type\": \"unknown\",",
									"    \"message\": \"VikaR\"",
									"}",
									"*/",
									"pm.test(\"Validate JSON structure of the response\", () => {",
									"  var responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.have.property(\"code\");",
									"  pm.expect(responseJson).to.have.property(\"type\");",
									"  pm.expect(responseJson).to.have.property(\"message\");",
									"});",
									"",
									"// Check response time",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}user/{{userName}}",
							"host": [
								"{{url}}user"
							],
							"path": [
								"{{userName}}"
							]
						},
						"description": "Delete a user by user's name"
					},
					"response": [
						{
							"name": "Remove a user  positive",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}user/{{userName}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{userName}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 10 Sep 2023 19:11:24 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"VikaR\"\n}"
						}
					]
				}
			],
			"description": "Operations about users"
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Place an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test status codes to ensure correct responses.4",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"New order creation completed successfully\");",
									"});",
									"",
									"// Validate response headers.",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"// Validate the JSON structure of the response.",
									"/* response has this structure:",
									"{",
									"    \"id\": 5,",
									"    \"petId\": 9475326877474,",
									"    \"quantity\": 1,",
									"    \"shipDate\": \"2023-09-06T11:32:09.522+0000\",",
									"    \"status\": \"placed\",",
									"    \"complete\": true",
									"}",
									"*/",
									"pm.test(\"Validate JSON structure of the response\", () => {",
									"  var responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.have.property(\"id\");",
									"  pm.expect(responseJson).to.have.property(\"petId\");",
									"  pm.expect(responseJson).to.have.property(\"quantity\");",
									"  pm.expect(responseJson).to.have.property(\"shipDate\");",
									"  pm.expect(responseJson).to.have.property(\"status\");",
									"  pm.expect(responseJson).to.have.property(\"complete\");",
									"});",
									"",
									"// Check response time",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Add some tests asserting value to environmental variable.",
									"pm.test(\"Validate OrderID, petID\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.be.an('object');",
									"    pm.expect(responseJson.id).to.eql(parseInt(pm.environment.get(\"orderID\")));",
									"    pm.expect(responseJson.petId).to.eql(pm.environment.get(\"petID\"));",
									"console.log(\"orderID from response: \" + responseJson.id + \" = orderID from enviroment value: \"+ pm.environment.get(\"orderID\"));",
									"console.log(\"petID from response: \" + responseJson.petId + \" = petID from enviroment value: \" + pm.environment.get(\"petID\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{orderID}},\n  \"petId\": {{petID}},\n  \"quantity\": 1,\n  \"shipDate\": \"2023-09-06T11:32:09.522Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}store/order",
							"host": [
								"{{url}}store"
							],
							"path": [
								"order"
							]
						},
						"description": "Place an order for a pet"
					},
					"response": [
						{
							"name": "Place an order  positive",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": {{orderID}},\n  \"petId\": {{petID}},\n  \"quantity\": 1,\n  \"shipDate\": \"2023-09-06T11:32:09.522Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}store/order",
									"host": [
										"{{url}}store"
									],
									"path": [
										"order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 10 Sep 2023 19:11:29 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"petId\": 9475326877474,\n    \"quantity\": 1,\n    \"shipDate\": \"2023-09-06T11:32:09.522+0000\",\n    \"status\": \"placed\",\n    \"complete\": true\n}"
						}
					]
				},
				{
					"name": "Info about an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test status codes to ensure correct responses.",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"The order is found successfully\");",
									"});",
									"",
									"// Validate response headers.",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"// Validate the JSON structure of the response.",
									"/* response has this structure:",
									"{",
									"    \"id\": 5,",
									"    \"petId\": 9475326877474,",
									"    \"quantity\": 1,",
									"    \"shipDate\": \"2023-09-06T11:32:09.522+0000\",",
									"    \"status\": \"placed\",",
									"    \"complete\": true",
									"}",
									"*/",
									"pm.test(\"Validate JSON structure of the response\", () => {",
									"  var responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.have.property(\"id\");",
									"  pm.expect(responseJson).to.have.property(\"petId\");",
									"  pm.expect(responseJson).to.have.property(\"quantity\");",
									"  pm.expect(responseJson).to.have.property(\"shipDate\");",
									"  pm.expect(responseJson).to.have.property(\"status\");",
									"  pm.expect(responseJson).to.have.property(\"complete\");",
									"});",
									"",
									"// Check response time",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}store/order/{{orderID}}",
							"host": [
								"{{url}}store"
							],
							"path": [
								"order",
								"{{orderID}}"
							]
						},
						"description": "Get info about an order by ID"
					},
					"response": [
						{
							"name": "Info about an order  positive",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}store/order/{{orderID}}",
									"host": [
										"{{url}}store"
									],
									"path": [
										"order",
										"{{orderID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 10 Sep 2023 19:11:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"petId\": 9475326877474,\n    \"quantity\": 1,\n    \"shipDate\": \"2023-09-06T11:32:09.522+0000\",\n    \"status\": \"placed\",\n    \"complete\": true\n}"
						}
					]
				}
			],
			"description": "Access to Petstore orders"
		},
		{
			"name": "Pet",
			"item": [
				{
					"name": "Create Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test status codes to ensure correct responses.",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"New pet creation completed successfully\");",
									"});",
									"",
									"// Validate response headers.",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"// Validate the JSON structure of the response.",
									"/* response has this structure:",
									"{",
									"    \"id\": 9475326877474,",
									"    \"category\": {",
									"        \"id\": 2023,",
									"        \"name\": \"Cats\"",
									"    },",
									"    \"name\": \"Lili\",",
									"    \"photoUrls\": [",
									"        \"string\"",
									"    ],",
									"    \"tags\": [",
									"        {",
									"            \"id\": 0,",
									"            \"name\": \"Tiger\"",
									"        }",
									"    ],",
									"    \"status\": \"available\"",
									"}",
									"*/",
									"pm.test(\"Validate JSON structure of the response\", () => {",
									"  var responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.have.property(\"id\");",
									"  pm.expect(responseJson.category).to.be.an(\"object\");",
									"  pm.expect(responseJson.category).to.have.property(\"id\");",
									"  pm.expect(responseJson.category).to.have.property(\"name\");",
									"  pm.expect(responseJson).to.have.property(\"name\");",
									"  pm.expect(responseJson).to.have.property(\"photoUrls\");",
									"  pm.expect(responseJson.tags).to.be.an(\"array\");",
									"  pm.expect(responseJson).to.have.property(\"tags\");",
									"  pm.expect(responseJson).to.have.property(\"status\");",
									"});",
									"",
									"// Check response time",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Add some tests asserting value to environmental variable.",
									"pm.test(\"Validate petNameCategory,petName, petID\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.be.an('object');",
									"    pm.expect(responseJson.name).to.eql(pm.environment.get(\"petName\"));",
									"    pm.expect(responseJson.id).to.eql(parseInt(pm.environment.get(\"petID\")));",
									"    pm.expect(responseJson.category.name).to.eql(pm.environment.get(\"petNameCategory\"));",
									"console.log(\"petName from response: \" + responseJson.name + \" = petName from enviroment value: \"+ pm.environment.get(\"petName\"));",
									"console.log(\"petID from response: \" + responseJson.id + \" = petID from enviroment value: \"+ pm.environment.get(\"petID\"));",
									"console.log(\"petNameCategory from response: \" + responseJson.category.name + \" = petNameCategory from enviroment value: \" + pm.environment.get(\"petNameCategory\"));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{petID}},\n  \"category\": {\n    \"id\": 2023,\n    \"name\": \"{{petNameCategory}}\"\n  },\n  \"name\": \"{{petName}}\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"Tiger\"\n    }\n  ],\n  \"status\": \"available\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}pet",
							"host": [
								"{{url}}pet"
							]
						},
						"description": "Create a new pet"
					},
					"response": [
						{
							"name": "Create Pet  positive",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": {{petID}},\n  \"category\": {\n    \"id\": 2023,\n    \"name\": \"{{petNameCategory}}\"\n  },\n  \"name\": \"{{petName}}\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"Tiger\"\n    }\n  ],\n  \"status\": \"available\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}pet",
									"host": [
										"{{url}}pet"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 10 Sep 2023 19:11:39 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 9475326877474,\n    \"category\": {\n        \"id\": 2023,\n        \"name\": \"Cats\"\n    },\n    \"name\": \"Lili\",\n    \"photoUrls\": [\n        \"string\"\n    ],\n    \"tags\": [\n        {\n            \"id\": 0,\n            \"name\": \"Tiger\"\n        }\n    ],\n    \"status\": \"available\"\n}"
						}
					]
				},
				{
					"name": "Info about a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test status codes to ensure correct responses.",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"The pet is found successfully\");",
									"});",
									"",
									"// Validate response headers.",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"// Validate the JSON structure of the response.",
									"/* response has this structure:",
									"{",
									"    \"id\": 9475326877474,",
									"    \"category\": {",
									"        \"id\": 2023,",
									"        \"name\": \"Cats\"",
									"    },",
									"    \"name\": \"Lili\",",
									"    \"photoUrls\": [",
									"        \"string\"",
									"    ],",
									"    \"tags\": [",
									"        {",
									"            \"id\": 0,",
									"            \"name\": \"Tiger\"",
									"        }",
									"    ],",
									"    \"status\": \"available\"",
									"}",
									"*/",
									"pm.test(\"Validate JSON structure of the response\", () => {",
									"  var responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.have.property(\"id\");",
									"  pm.expect(responseJson.category).to.be.an(\"object\");",
									"  pm.expect(responseJson.category).to.have.property(\"id\");",
									"  pm.expect(responseJson.category).to.have.property(\"name\");",
									"  pm.expect(responseJson).to.have.property(\"name\");",
									"  pm.expect(responseJson.photoUrls).to.be.an(\"array\");",
									"  pm.expect(responseJson).to.have.property(\"photoUrls\");",
									"  pm.expect(responseJson.tags).to.be.an(\"array\");",
									"  pm.expect(responseJson).to.have.property(\"tags\");",
									"  pm.expect(responseJson).to.have.property(\"status\");",
									"});",
									"",
									"// Check response time",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}pet/{{petID}}",
							"host": [
								"{{url}}pet"
							],
							"path": [
								"{{petID}}"
							]
						},
						"description": "Get infor about a pet by its ID"
					},
					"response": [
						{
							"name": "Info about a pet  positive",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}pet/{{petID}}",
									"host": [
										"{{url}}pet"
									],
									"path": [
										"{{petID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 10 Sep 2023 19:11:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 9475326877474,\n    \"category\": {\n        \"id\": 2023,\n        \"name\": \"Cats\"\n    },\n    \"name\": \"Lili\",\n    \"photoUrls\": [\n        \"string\"\n    ],\n    \"tags\": [\n        {\n            \"id\": 0,\n            \"name\": \"Tiger\"\n        }\n    ],\n    \"status\": \"available\"\n}"
						}
					]
				}
			],
			"description": "Everything about your pets"
		}
	]
}